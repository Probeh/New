// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Resources.Context;

namespace Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Server.Resources.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActiveLast");

                    b.Property<DateTime>("ActiveSince");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Server.Resources.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActiveLast");

                    b.Property<DateTime>("ActiveSince");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ParentId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Server.Resources.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActiveLast");

                    b.Property<DateTime>("ActiveSince");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<int?>("ProductId");

                    b.Property<int?>("SoftwareId");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Server.Resources.Models.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActiveLast");

                    b.Property<DateTime>("ActiveSince");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<int?>("ProductId");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("Server.Resources.Models.Company", b =>
                {
                    b.HasOne("Server.Resources.Models.Company", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Server.Resources.Models.Product", b =>
                {
                    b.HasOne("Server.Resources.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Server.Resources.Models.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Server.Resources.Models.Service", b =>
                {
                    b.HasOne("Server.Resources.Models.Company", "Company")
                        .WithMany("Services")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Server.Resources.Models.Service", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("Server.Resources.Models.Product", "Product")
                        .WithMany("Services")
                        .HasForeignKey("ProductId");

                    b.HasOne("Server.Resources.Models.Software", "Software")
                        .WithMany("Services")
                        .HasForeignKey("SoftwareId");
                });

            modelBuilder.Entity("Server.Resources.Models.Software", b =>
                {
                    b.HasOne("Server.Resources.Models.Company", "Company")
                        .WithMany("Software")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Server.Resources.Models.Software", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("Server.Resources.Models.Product", "Product")
                        .WithMany("Software")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
